databases:
  - name: servicedb
    databaseName: servicedb
    user: servicedb
    region: ohio

services:
  - type: web
    name: webservice
    env: python
    region: ohio
    buildCommand: "./build.sh"
    startCommand: "gunicorn backend.wsgi:application"
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: servicedb
          property: connectionString
      - key: SECRET_KEY
        generateValue: true
      - key: WEB_CONCURRENCY
        value: 4
      - key: REDIS_URL
        fromService:
          name: celery-redis
          type: redis
          property: connectionString
  - type: worker
    name: queue
    region: ohio
    env: python
    buildCommand: "./build.sh"
    startCommand: "celery -A backend worker -Q default --loglevel=info --concurrency=4"
    envVars:
      - key: REDIS_URL
        fromService:
          name: celery-redis
          type: redis
          property: connectionString
      - key: DATABASE_URL
        fromDatabase:
          name: servicedb
          property: connectionString
  - type: worker
    name: bot
    region: ohio
    env: python
    buildCommand: "./build.sh"
    startCommand: "celery -A backend worker -Q bot --loglevel=info --concurrency=1"
    envVars:
      - key: REDIS_URL
        fromService:
          name: celery-redis
          type: redis
          property: connectionString
      - key: DATABASE_URL
        fromDatabase:
          name: servicedb
          property: connectionString
  - type: web
    name: flower
    region: ohio
    env: python
    buildCommand: "./build.sh"
    startCommand: "celery -A  backend flower --loglevel=info"
    envVars:
      - key: REDIS_URL
        fromService:
          type: redis
          name: celery-redis
          property: connectionString
      - key: DATABASE_URL
        fromDatabase:
          name: servicedb
          property: connectionString
  - type: worker
    name: scheduler
    region: ohio
    env: python
    buildCommand: "./build.sh"
    startCommand: "celery -A backend beat --loglevel=info"
    envVars:
      - key: REDIS_URL
        fromService:
          name: celery-redis
          type: redis
          property: connectionString
      - key: DATABASE_URL
        fromDatabase:
          name: servicedb
          property: connectionString
  - type: worker
    name: basicworker
    region: ohio
    env: python
    buildCommand: "./build.sh"
    startCommand: "celery -A backend worker --loglevel=info --concurrency=4"
    envVars:
      - key: REDIS_URL
        fromService:
          name: celery-redis
          type: redis
          property: connectionString
      - key: DATABASE_URL
        fromDatabase:
          name: servicedb
          property: connectionString

  - type: redis
    name: celery-redis
    region: ohio
    plan: "Starter Plus"
    maxmemoryPolicy: allkeys-lfu # recommended policy for queues
    ipAllowList: [ ] # only allow internal connections